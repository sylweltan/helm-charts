# Default values for prometheus-vmware-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: sylweltan/prometheus-vmware-exporter
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 10001

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 10001
  # runAsGroup: 10001
  # allowPrivilegeEscalation: false
  # seccompProfile:
  #   type: "RuntimeDefault"

annotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "9512"

vmware:
  host: "esx.domain.local"
  username: "username"
  password: "password"
  # Log: possible values: "debug", "info", "warn", "error"
  log: ""

existingSecret:
  name: ""

secret:
  annotations: {}
    # key: "true"
    # example: "false"

service:
  type: ClusterIP
  port: 9512

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set the namespace the ServiceMonitor should be deployed
  # namespace: monitoring
  # Set how frequently Prometheus should scrape
  # interval: 60s
  # Set path to cloudwatch-exporter telemetry-path
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  # labels:
  # Set timeout for scrape
  # timeout: 10s
  # Set of labels to transfer from the Kubernetes Service onto the target
  # targetLabels: []

# resources: {}
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

# Configurable health checks
livenessProbe:
  initialDelaySeconds: 0
  timeoutSeconds: 3

readinessProbe:
  initialDelaySeconds: 0
  timeoutSeconds: 1

# Labels and annotations to attach to the deployment resource
deployment:
  labels: {}
  annotations: {}

tolerations: []

affinity: {}
